rule r1 : (Node)
{
	modify {
		n:Node;
		return(n);
	}
}

rule r2
{
	modify {
	}
}

rule r3(n:Node)
{
	modify {
	}
}

rule r4(n:Node, m:Node) : (Node, Node)
{
	modify {
		return(m, n);
	}
}

rule lazy_or
{
	n:Node;

	modify {
		exec($||((::m)=r1, [r2], r3(n), false, (::l,::m)=$[r4(n,::m)]));
	}
}

rule lazy_and
{
	n:Node;

	modify {
		exec($&&((::m)=r1, [r2], r3(n), true, (::l,::m)=$[r4(n,::m)]));
	}
}

rule strict_or
{
	n:Node;

	modify {
		exec($|((::m)=r1, [r2], r3(n), false, (::l,::m)=$[r4(n,::m)]));
	}
}

rule strict_and
{
	n:Node;

	modify {
		exec($&((::m)=r1, [r2], r3(n), true, (::l,::m)=$[r4(n,::m)]));
	}
}

rule weighted_one
{
	n:Node;

	modify {
		exec($.(1.0(::m)=r1, 1.5[r2], 0.5r3(n), 3.141592true, 1.5(::l,::m)=$[r4(n,::m)]));
	}
}
