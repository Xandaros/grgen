// Type casts for primitive types
using attrib_model_001, enum_model_001;

rule r {
	nby: NBYTE;
	nsh: NSHORT;
	ni: NINT;
	nl: NLONG;
	nf: NFLOAT;
	nd: NDOUBLE;
	ns: NSTRING;
	nb: NBOOL;

	replace {
		eval {
			//from boolean;
			nb.a = (boolean) nb.a;
			nb.a = nb.a == (boolean) nb.a;
			nb.a = nb.a && (boolean) nb.a;
			nb.a = nb.a & (boolean) nb.a;

			ns.a = (string) nb.a;
			nb.a = ns.a == (string) nb.a;
			ns.a = ns.a + (string) nb.a;


			//from byte
			nby.a = (byte) nby.a;
			nsh.a = (short) nby.a;
			ni.a = (int) nby.a;
			nl.a = (long) nby.a;
			nb.a = ni.a == (int) nby.a;
			ni.a = ni.a + (int) nby.a;
			ni.a = - (int) nby.a;

			nf.a = (float) nby.a;
			nb.a = nf.a == (float) nby.a;
			nf.a = nf.a + (float) nby.a;
			nf.a = - (float) nby.a;

			nd.a = (double) nby.a;
			nb.a = nd.a == (double) nby.a;
			nd.a = nd.a + (double) nby.a;
			nd.a = - (double) nby.a;

			ns.a = (string) nby.a;
			nb.a = ns.a == (string) nby.a;
			ns.a = ns.a + (string) nby.a;


			//from short
			nby.a = (byte) nsh.a;
			nsh.a = (short) nsh.a;
			ni.a = (int) nsh.a;
			nl.a = (long) nsh.a;
			nb.a = ni.a == (int) nsh.a;
			ni.a = ni.a + (int) nsh.a;
			ni.a = - (int) nsh.a;

			nf.a = (float) nsh.a;
			nb.a = nf.a == (float) nsh.a;
			nf.a = nf.a + (float) nsh.a;
			nf.a = - (float) nsh.a;

			nd.a = (double) nsh.a;
			nb.a = nd.a == (double) nsh.a;
			nd.a = nd.a + (double) nsh.a;
			nd.a = - (double) nsh.a;

			ns.a = (string) nsh.a;
			nb.a = ns.a == (string) nsh.a;
			ns.a = ns.a + (string) nsh.a;


			//from int
			nby.a = (byte) ni.a;
			nsh.a = (short) ni.a;
			ni.a = (int) ni.a;
			nl.a = (long) ni.a;
			nb.a = ni.a == (int) ni.a;
			ni.a = ni.a + (int) ni.a;
			ni.a = - (int) ni.a;

			nf.a = (float) ni.a;
			nb.a = nf.a == (float) ni.a;
			nf.a = nf.a + (float) ni.a;
			nf.a = - (float) ni.a;

			nd.a = (double) ni.a;
			nb.a = nd.a == (double) ni.a;
			nd.a = nd.a + (double) ni.a;
			nd.a = - (double) ni.a;

			ns.a = (string) ni.a;
			nb.a = ns.a == (string) ni.a;
			ns.a = ns.a + (string) ni.a;


			//from long
			nby.a = (byte) nl.a;
			nsh.a = (short) nl.a;
			ni.a = (int) nl.a;
			nl.a = (long) nl.a;
			nb.a = ni.a == (int) nl.a;
			ni.a = ni.a + (int) nl.a;
			ni.a = - (int) nl.a;

			nf.a = (float) nl.a;
			nb.a = nf.a == (float) nl.a;
			nf.a = nf.a + (float) nl.a;
			nf.a = - (float) nl.a;

			nd.a = (double) nl.a;
			nb.a = nd.a == (double) nl.a;
			nd.a = nd.a + (double) nl.a;
			nd.a = - (double) nl.a;

			ns.a = (string) nl.a;
			nb.a = ns.a == (string) nl.a;
			ns.a = ns.a + (string) nl.a;


			//from float
			nby.a = (byte) nf.a;
			nsh.a = (short) nf.a;
			ni.a = (int) nf.a;
			nl.a = (long) nf.a;
			nb.a = ni.a == (int) nf.a;
			ni.a = ni.a + (int) nf.a;
			ni.a = - (int) nf.a;

			nf.a = (float) nf.a;
			nb.a = nf.a == (float) nf.a;
			nf.a = nf.a + (float) nf.a;
			nf.a = - (float) nf.a;

			nd.a = (double) nf.a;
			nb.a = nd.a == (double) nf.a;
			nd.a = nd.a + (double) nf.a;
			nd.a = - (double) nf.a;

			ns.a = (string) nf.a;
			nb.a = ns.a == (string) nf.a;
			ns.a = ns.a + (string) nf.a;


			//from double
			nby.a = (byte) nd.a;
			nsh.a = (short) nd.a;
			ni.a = (int) nd.a;
			nl.a = (long) nd.a;
			nb.a = ni.a == (int) nd.a;
			ni.a = ni.a + (int) nd.a;
			ni.a = - (int) nd.a;

			nf.a = (float) nd.a;
			nb.a = nf.a == (float) nd.a;
			nf.a = nf.a + (float) nd.a;
			nf.a = - (float) nd.a;

			nd.a = (double) nd.a;
			nb.a = nd.a == (double) nd.a;
			nd.a = nd.a + (double) nd.a;
			nd.a = - (double) nd.a;

			ns.a = (string) nd.a;
			nb.a = ns.a == (string) nd.a;
			ns.a = ns.a + (string) nd.a;


			//from string
			ns.a = (string) ns.a;
			nb.a = ns.a == (string) ns.a;
			ns.a = ns.a + (string) ns.a;
		}
	}
}

