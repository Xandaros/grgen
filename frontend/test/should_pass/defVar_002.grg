using attrib_model_001;

rule r
{
	ni:NINT;
	nl:NLONG;
	nb:NBOOL;
	ns:NSTRING;
	-ef:EFLOAT->;
	-ed:EDOUBLE->;
	-eo:EOBJECT->;
	-eby:EBYTE->;
	-esh:ESHORT->;

	modify {
		def var ai:int = 42;
		def var al:long = 42l;
		def var ab:boolean = true;
		def var as:string = "1337 0wn4g3 f0r ze lulz";
		def var af:float = 42.42424242f;
		def var ad:double = 42.42424242424242;
		def var ao:object = null;
		def var aby:byte = 42y;
		def var ash:short = 42s;

		evalhere {
			ni.a = ai;
			nl.a = al;
			nb.a = ab;
			ns.a = as;
			ef.a = af;
			ed.a = ad;
			eo.a = ao;
			eby.a = aby;
			esh.a = ash;
		}

		eval {
			yield ai = ni.a;
			yield al = nl.a;
			yield ab = nb.a;
			yield as = ns.a;
			yield af = ef.a;
			yield ad = ed.a;
			yield ao = eo.a;
			yield aby = eby.a;
			yield ash = esh.a;
		}

		eval {
			yield ai = ai + ni.a;
			yield al = al + nl.a;
			yield ab = ab | nb.a;
			yield as = as + ns.a;
			yield af = af + ef.a;
			yield ad = ad + ed.a;
			yield ao = ao==null ? eo.a : ao;
			yield aby = (byte)(aby + eby.a);
			yield ash = (short)(ash + esh.a);
		}
	}
}

pattern p
{
	ni:NINT;
	nl:NLONG;
	nb:NBOOL;
	ns:NSTRING;
	-ef:EFLOAT->;
	-ed:EDOUBLE->;
	-eo:EOBJECT->;
	-eby:EBYTE->;
	-esh:ESHORT->;

	modify {
		def var ai:int = 42;
		def var al:long = 42l;
		def var ab:boolean = true;
		def var as:string = "1337 0wn4g3 f0r ze lulz";
		def var af:float = 42.42424242f;
		def var ad:double = 42.42424242424242;
		def var ao:object = null;
		def var aby:byte = 42y;
		def var ash:short = 42s;

		evalhere {
			ni.a = ai;
			nl.a = al;
			nb.a = ab;
			ns.a = as;
			ef.a = af;
			ed.a = ad;
			eo.a = ao;
			eby.a = aby;
			esh.a = ash;
		}

		eval {
			yield ai = ni.a;
			yield al = nl.a;
			yield ab = nb.a;
			yield as = ns.a;
			yield af = ef.a;
			yield ad = ed.a;
			yield ao = eo.a;
			yield aby = eby.a;
			yield ash = esh.a;
		}

		eval {
			yield ai = ai + ni.a;
			yield al = al + nl.a;
			yield ab = ab | nb.a;
			yield as = as + ns.a;
			yield af = af + ef.a;
			yield ad = ad + ed.a;
			yield ao = ao==null ? eo.a : ao;
			yield aby = (byte)(aby + eby.a);
			yield ash = (short)(ash + esh.a);
		}
	}
}

rule ra
{
	alternative
	{
		case_ {
			ni:NINT;
			nl:NLONG;
			nb:NBOOL;
			ns:NSTRING;
			-ef:EFLOAT->;
			-ed:EDOUBLE->;
			-eo:EOBJECT->;
			-eby:EBYTE->;
			-esh:ESHORT->;

			modify {
				def var ai:int = 42;
				def var al:long = 42l;
				def var ab:boolean = true;
				def var as:string = "1337 0wn4g3 f0r ze lulz";
				def var af:float = 42.42424242f;
				def var ad:double = 42.42424242424242;
				def var ao:object = null;
				def var aby:byte = 42y;
				def var ash:short = 42s;

				evalhere {
					ni.a = ai;
					nl.a = al;
					nb.a = ab;
					ns.a = as;
					ef.a = af;
					ed.a = ad;
					eo.a = ao;
					eby.a = aby;
					esh.a = ash;
				}

				eval {
					yield ai = ni.a;
					yield al = nl.a;
					yield ab = nb.a;
					yield as = ns.a;
					yield af = ef.a;
					yield ad = ed.a;
					yield ao = eo.a;
					yield aby = eby.a;
					yield ash = esh.a;
				}

				eval {
					yield ai = ai + ni.a;
					yield al = al + nl.a;
					yield ab = ab | nb.a;
					yield as = as + ns.a;
					yield af = af + ef.a;
					yield ad = ad + ed.a;
					yield ao = ao==null ? eo.a : ao;
					yield aby = (byte)(aby + eby.a);
					yield ash = (short)(ash + esh.a);
				}
			}
		}
	}

	modify {
	}
}

rule ran
{
	ni:NINT;
	nl:NLONG;
	nb:NBOOL;
	ns:NSTRING;
	-ef:EFLOAT->;
	-ed:EDOUBLE->;
	-eo:EOBJECT->;
	-eby:EBYTE->;
	-esh:ESHORT->;

	alternative
	{
		case_ {

			modify {
				evalhere {
					ni.a = ai;
					nl.a = al;
					nb.a = ab;
					ns.a = as;
					ef.a = af;
					ed.a = ad;
					eo.a = ao;
					eby.a = aby;
					esh.a = ash;
				}

				eval {
					yield ai = ni.a;
					yield al = nl.a;
					yield ab = nb.a;
					yield as = ns.a;
					yield af = ef.a;
					yield ad = ed.a;
					yield ao = eo.a;
					yield aby = eby.a;
					yield ash = esh.a;
				}

				eval {
					yield ai = ai + ni.a;
					yield al = al + nl.a;
					yield ab = ab | nb.a;
					yield as = as + ns.a;
					yield af = af + ef.a;
					yield ad = ad + ed.a;
					yield ao = ao==null ? eo.a : ao;
					yield aby = (byte)(aby + eby.a);
					yield ash = (short)(ash + esh.a);
				}
			}
		}
	}

	modify {
		def var ai:int = 42;
		def var al:long = 42l;
		def var ab:boolean = true;
		def var as:string = "1337 0wn4g3 f0r ze lulz";
		def var af:float = 42.42424242f;
		def var ad:double = 42.42424242424242;
		def var ao:object = null;
		def var aby:byte = 42y;
		def var ash:short = 42s;
	}
}

pattern pa
{
	iterated
	{
		ni:NINT;
		nl:NLONG;
		nb:NBOOL;
		ns:NSTRING;
		-ef:EFLOAT->;
		-ed:EDOUBLE->;
		-eo:EOBJECT->;
		-eby:EBYTE->;
		-esh:ESHORT->;

		modify {
			def var ai:int = 42;
			def var al:long = 42l;
			def var ab:boolean = true;
			def var as:string = "1337 0wn4g3 f0r ze lulz";
			def var af:float = 42.42424242f;
			def var ad:double = 42.42424242424242;
			def var ao:object = null;
			def var aby:byte = 42y;
			def var ash:short = 42s;

			evalhere {
				ni.a = ai;
				nl.a = al;
				nb.a = ab;
				ns.a = as;
				ef.a = af;
				ed.a = ad;
				eo.a = ao;
				eby.a = aby;
				esh.a = ash;
			}

			eval {
				yield ai = ni.a;
				yield al = nl.a;
				yield ab = nb.a;
				yield as = ns.a;
				yield af = ef.a;
				yield ad = ed.a;
				yield ao = eo.a;
				yield aby = eby.a;
				yield ash = esh.a;
			}

			eval {
				yield ai = ai + ni.a;
				yield al = al + nl.a;
				yield ab = ab | nb.a;
				yield as = as + ns.a;
				yield af = af + ef.a;
				yield ad = ad + ed.a;
				yield ao = ao==null ? eo.a : ao;
				yield aby = (byte)(aby + eby.a);
				yield ash = (short)(ash + esh.a);
			}
		}
	}

	modify {
	}
}

pattern pan
{
	ni:NINT;
	nl:NLONG;
	nb:NBOOL;
	ns:NSTRING;
	-ef:EFLOAT->;
	-ed:EDOUBLE->;
	-eo:EOBJECT->;
	-eby:EBYTE->;
	-esh:ESHORT->;

	iterated
	{
		.;

		modify {
			evalhere {
				ni.a = ai;
				nl.a = al;
				nb.a = ab;
				ns.a = as;
				ef.a = af;
				ed.a = ad;
				eo.a = ao;
				eby.a = aby;
				esh.a = ash;
			}

			eval {
				yield ai = ni.a;
				yield al = nl.a;
				yield ab = nb.a;
				yield as = ns.a;
				yield af = ef.a;
				yield ad = ed.a;
				yield ao = eo.a;
				yield aby = eby.a;
				yield ash = esh.a;
			}

			eval {
				yield ai = ai + ni.a;
				yield al = al + nl.a;
				yield ab = ab | nb.a;
				yield as = as + ns.a;
				yield af = af + ef.a;
				yield ad = ad + ed.a;
				yield ao = ao==null ? eo.a : ao;
				yield aby = (byte)(aby + eby.a);
				yield ash = (short)(ash + esh.a);
			}
		}
	}

	modify {
		def var ai:int = 42;
		def var al:long = 42l;
		def var ab:boolean = true;
		def var as:string = "1337 0wn4g3 f0r ze lulz";
		def var af:float = 42.42424242f;
		def var ad:double = 42.42424242424242;
		def var ao:object = null;
		def var aby:byte = 42y;
		def var ash:short = 42s;
	}
}
