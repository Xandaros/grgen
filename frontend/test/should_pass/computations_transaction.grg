procedure foo
{
	def var transactionId:int;
	(transactionId) = Transaction::start();
	Transaction::pause();
	Transaction::resume();
	Transaction::commit(transactionId);
	(transactionId) = Transaction::start();
	Transaction::rollback(transactionId);
	return;
}

rule r : (int)
{	
	modify {
		def var transactionId:int;
		
		eval { 
			(yield transactionId) = Transaction::start();
			Transaction::pause();
			Transaction::resume();
			Transaction::commit(transactionId);
			(yield transactionId) = Transaction::start();
			Transaction::rollback(transactionId);
		}
		
		return (transactionId);
	}
}
