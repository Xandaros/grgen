#using "index_model_003.gm"

rule t(var x:int)
{
	m:N;
	
	modify {
		def ref res_:set<Node> = set<Node>{};
		exec
		(
			for{n:Node in {foo==42}; {res_.add(n)} } ;>
			for{n:Node in {bar==42}; {res_.add(n)} } ;>
			for{n:Node in {baz==42}; {res_.add(n)} } ;>

			for{n:N in {ascending(foo)}; {res_.add(n)} } ;>
			for{n:N in {ascending(bar)}; {res_.add(n)} } ;>
			for{n:N in {ascending(baz)}; {res_.add(n)} } ;>

			for{n:N in {descending(foo)}; {res_.add(n)} } ;>
			for{n:N in {descending(bar)}; {res_.add(n)} } ;>
			for{n:N in {descending(baz)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz>=42)}; {res_.add(n)} } ;>
			
			for{n:Node in {descending(foo<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz<42)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo>=42, foo<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar>=42, bar<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz>=42, baz<1000)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo>x-42, foo<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar>x-42, bar<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz>x-42, baz<=x)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo>m.i-42, foo<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar>m.i-42, bar<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz>m.i-42, baz<=m.i)}; {res_.add(n)} }
		);
	}
}

rule t2(var x:int)
{
	m:N;

	modify {
		def ref res_:set<Node> = set<Node>{};
		exec
		(
			for{n:Node in {foo2==42}; {res_.add(n)} } ;>
			for{n:Node in {bar2==42}; {res_.add(n)} } ;>
			for{n:Node in {baz2==42}; {res_.add(n)} } ;>

			for{n:N in {ascending(foo2)}; {res_.add(n)} } ;>
			for{n:N in {ascending(bar2)}; {res_.add(n)} } ;>
			for{n:N in {ascending(baz2)}; {res_.add(n)} } ;>

			for{n:N in {descending(foo2)}; {res_.add(n)} } ;>
			for{n:N in {descending(bar2)}; {res_.add(n)} } ;>
			for{n:N in {descending(baz2)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo2>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar2>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz2>=42)}; {res_.add(n)} } ;>
			
			for{n:Node in {descending(foo2<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar2<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz2<42)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo2>=42, foo2<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar2>=42, bar2<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz2>=42, baz2<1000)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo2>x-42, foo2<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar2>x-42, bar2<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz2>x-42, baz2<=x)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo2>m.i-42, foo2<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar2>m.i-42, bar2<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz2>m.i-42, baz2<=m.i)}; {res_.add(n)} }
		);
	}
}

rule t3(var x:int)
{
	m:N;
	
	modify {
		def ref res_:set<Node> = set<Node>{};
		exec
		(
			for{n:Node in {foo3==42}; {res_.add(n)} } ;>
			for{n:Node in {bar3==42}; {res_.add(n)} } ;>
			for{n:Node in {baz3==42}; {res_.add(n)} } ;>

			for{n:N in {ascending(foo3)}; {res_.add(n)} } ;>
			for{n:N in {ascending(bar3)}; {res_.add(n)} } ;>
			for{n:N in {ascending(baz3)}; {res_.add(n)} } ;>

			for{n:N in {descending(foo3)}; {res_.add(n)} } ;>
			for{n:N in {descending(bar3)}; {res_.add(n)} } ;>
			for{n:N in {descending(baz3)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo3>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar3>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz3>=42)}; {res_.add(n)} } ;>
			
			for{n:Node in {descending(foo3<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar3<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz3<42)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo3>=42, foo3<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar3>=42, bar3<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz3>=42, baz3<1000)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo3>x-42, foo3<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar3>x-42, bar3<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz3>x-42, baz3<=x)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo3>m.i-42, foo3<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar3>m.i-42, bar3<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz3>m.i-42, baz3<=m.i)}; {res_.add(n)} }
		);
	}
}

rule t4(var x:int)
{
	m:N;
	
	modify {
		def ref res_:set<Node> = set<Node>{};
		exec
		(
			for{n:Node in {foo4==42}; {res_.add(n)} } ;>
			for{n:Node in {bar4==42}; {res_.add(n)} } ;>
			for{n:Node in {baz4==42}; {res_.add(n)} } ;>

			for{n:N in {ascending(foo4)}; {res_.add(n)} } ;>
			for{n:N in {ascending(bar4)}; {res_.add(n)} } ;>
			for{n:N in {ascending(baz4)}; {res_.add(n)} } ;>

			for{n:N in {descending(foo4)}; {res_.add(n)} } ;>
			for{n:N in {descending(bar4)}; {res_.add(n)} } ;>
			for{n:N in {descending(baz4)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo4>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar4>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz4>=42)}; {res_.add(n)} } ;>
			
			for{n:Node in {descending(foo4<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar4<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz4<42)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo4>=42, foo4<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar4>=42, bar4<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz4>=42, baz4<1000)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo4>x-42, foo4<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar4>x-42, bar4<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz4>x-42, baz4<=x)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo4>m.i-42, foo4<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar4>m.i-42, bar4<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz4>m.i-42, baz4<=m.i)}; {res_.add(n)} }
		);
	}
}

rule t5(var x:int)
{
	m:N;
	
	modify {
		def ref res_:set<Node> = set<Node>{};
		exec
		(
			for{n:Node in {foo5==42}; {res_.add(n)} } ;>
			for{n:Node in {bar5==42}; {res_.add(n)} } ;>
			for{n:Node in {baz5==42}; {res_.add(n)} } ;>

			for{n:N in {ascending(foo5)}; {res_.add(n)} } ;>
			for{n:N in {ascending(bar5)}; {res_.add(n)} } ;>
			for{n:N in {ascending(baz5)}; {res_.add(n)} } ;>

			for{n:N in {descending(foo5)}; {res_.add(n)} } ;>
			for{n:N in {descending(bar5)}; {res_.add(n)} } ;>
			for{n:N in {descending(baz5)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo5>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar5>=42)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz5>=42)}; {res_.add(n)} } ;>
			
			for{n:Node in {descending(foo5<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar5<42)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz5<42)}; {res_.add(n)} } ;>
			
			for{n:Node in {ascending(foo5>=42, foo5<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(bar5>=42, bar5<1000)}; {res_.add(n)} } ;>
			for{n:Node in {ascending(baz5>=42, baz5<1000)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo5>x-42, foo5<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar5>x-42, bar5<=x)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz5>x-42, baz5<=x)}; {res_.add(n)} } ;>

			for{n:Node in {descending(foo5>m.i-42, foo5<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(bar5>m.i-42, bar5<=m.i)}; {res_.add(n)} } ;>
			for{n:Node in {descending(baz5>m.i-42, baz5<=m.i)}; {res_.add(n)} }
		);
	}
}
