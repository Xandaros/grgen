using model_init;

foo() : set<Node>
{
	def res1:Node = add(Node);
	def res2:A = add(A);
	def -res3:Edge-> = add(Edge, res1, res2);
	def -res4:E1-> = add(E1, res2, res1);
	rem(res1);
	rem(res2);
	rem(res3);
	rem(res4);
	return( set<Node>{add(Node), add(A)} );
}

rule r()
{
	modify {
		def ref res:set<Node>;
		
		eval { 
			def res1:Node = add(Node);
			def res2:A = add(A);
			def -res3:Edge-> = add(Edge, res1, res2);
			def -res4:E1-> = add(E1, res2, res1);
			rem(res1);
			rem(res2);
			rem(res3);
			rem(res4);
			yield res = foo() | { add(Node) };
		}
	}
}
