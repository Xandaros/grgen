rule r() : (int)
{	
	modify {
		def var res:int = 0;
		
		exec ( 
			for{i:int in [0:100]; { yield res = res + 1 } }
			;> x:int = 10 ;> y:int = 0 ;>
			for{i:int in [x:y]; { yield res = res + 1; } }
		);
		
		return (res);
	}
}

rule r2() : (int)
{	
	modify {
		def var res:int = 0;
		
		exec ( 
			for{i:int in [0:100]; { yield res = res + 1 } }
			;> ::x = 10 ;> ::y = 0 ;>
			for{::i in [::x : ::y]; { yield res = res + 1; } }
		);
		
		return (res);
	}
}
