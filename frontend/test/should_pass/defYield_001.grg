rule t
{
	def x:Node;
	pp:p(yield x);

	modify {
		def y:Node;
		pp(yield y);
		x --> y;
	}
}

pattern p(def x:Node) modify(def z:Node)
{
	y:Node;
	yield { yield x = y; }
	
	modify {
		u:Node;
		eval { yield z = u; }
	}
}

