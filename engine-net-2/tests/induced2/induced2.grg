rule init1
{

    replace
    {
        a:Node;
        b:Node;
        
        a -e:Edge-> b;
        a -f:Edge-> b;
        a -g:Edge-> b;
    }
}

rule init2
{

    replace
    {
        a:Node;
        b:Node;
        a --> b;
        a --> a;
    }
}

induced rule inducedRule1
{

    a:Node;
    b:Node;
    
    a -e:Edge-> b;
    a -f:Edge-> b;
    a -g:Edge-> b;

    modify
    {
        delete(e);
    }    
}

induced rule inducedRule2
{
    a:Node;
    b:Node;
    
    a -e:Edge-> b;
    a -f:Edge-> b;

    modify
    {
        delete(e);
    }    
}

induced rule inducedRule3
{
    a:Node;
    b:Node;
    
    a -e:Edge-> b;

    modify
    {
        delete(e);
    }    
}

induced test inducedTest1
{

    a:Node;
    b:Node;
    
    a -e:Edge-> b;
    a -f:Edge-> b;
    a -g:Edge-> b;
}

induced test inducedTest2
{
    a:Node;
    b:Node;
    
    a -e:Edge-> b;
    a -f:Edge-> b;
}

induced test inducedTest3
{
    a:Node;
    b:Node;
    
    a -e:Edge-> b;
}