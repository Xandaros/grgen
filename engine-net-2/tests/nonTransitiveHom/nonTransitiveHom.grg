rule init {
	replace {
		x:Node;
		y:Node;
		z:Node;
	}
}

test transitive {
	x:Node;
	y:Node;
	z:Node;
	hom(x,y,z);
}

// demonstrate a way to create non-transitive hom statements
test transitiveWithNACs {
	x:Node;
	y:Node;
	z:Node;

	// instead of
	// hom(x,y);
	// hom(y,z);
	
	// we use
	hom(x,y,z);
	// and assure that x and z are matched isomorphic
	negative {
		negative {
			x;
			z;
		}
	}
}

test nonTransitive {
	x:Node;
	y:Node;
	z:Node;
	hom(x,y);
	hom(y,z);
}
