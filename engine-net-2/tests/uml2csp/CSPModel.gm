node class Event { name:string; }

node class ProcessExpression;

node class BinaryOperator extends ProcessExpression;
edge class leftHandSide
  connect BinaryOperator [*] --> ProcessExpression [1:1];
edge class rightHandSide
  connect BinaryOperator [*] --> ProcessExpression [1:1];

node class Condition extends BinaryOperator { expression:string; }

node class Prefix extends ProcessExpression;
edge class targetProcess
  connect Prefix [*] --> ProcessExpression [1:1];
edge class event
  connect Prefix [*] --> Event [1:1];

node class ProcessWithSet extends ProcessExpression;
edge class eventSet
  connect ProcessWithSet [*] --> Event [*];

node class Hiding extends ProcessWithSet;
edge class hiddenProcess
  connect Hiding [*] --> ProcessExpression [1:1];
  
node class Concurrency extends BinaryOperator, ProcessWithSet;

node class Process extends ProcessExpression { name:string; subscript:string; }

node class ProcessAssignment;
edge class process
  connect ProcessAssignment [*] --> ProcessExpression [1:1];
edge class processIdentifier
  connect ProcessAssignment [*] --> Process [1:1];

node class CspContainer;
edge class processAssignments
  connect CspContainer [0:1] --> ProcessAssignment [0:1],
          ProcessAssignment [0:1] --> ProcessAssignment [0:1];
