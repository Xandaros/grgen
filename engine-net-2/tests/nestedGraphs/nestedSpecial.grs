new graph nestedGraphs/nested

include nestedGraphs/nestedlayout.grsi

# build rgb-triangle graph, use induced and export/import to fill sub in all of the nodes with the same subgraph
exec (gr:set<Node>)=init ;> (r:RedGraph)=red ;> (g:GreenGraph)=green ;> (b:BlueGraph)=blue ;> {\
export("redgreenblue.grs");\
sub:graph = inducedSubgraph(gr);\
export(sub, "redgreenblue2.grs");\
r.sub = import("redgreenblue.grs");\
g.sub = sub;\
b.sub=import("redgreenblue2.grs");\
export("redgreenbluefull.grs");\
r.sub==g.sub && g.sub==b.sub\
}

# delete green from the r, g, b subgraphs via method call
# ensure the graphs are isomorphic afterwards
exec (r:RedGraph)=red ;> (g:GreenGraph)=green ;> (b:BlueGraph)=blue ;>\
rsub:graph ;> gsub:graph ;> bsub:graph ;> { rsub=r.sub; gsub=g.sub; bsub=b.sub } ;>\
rsub.remGreen() ;>\
gsub.remGreen() ;>\
bsub.remGreenSeq() ;>\
rsub.green() ;>\
rsub.red() ;>\
{ export("redbluefull.grs");\
rsub == gsub && gsub == bsub && bsub == rsub}

exit
