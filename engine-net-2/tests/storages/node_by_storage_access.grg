using from_storage;

rule r1(ref m:map<Node,Node>)
{
	n:Node{m[l]} --> l:Node;
	
	modify {
		delete(l);
		eval { m.rem(l); }
	}
}

rule r3(ref m:map<N,N>)
{
	n:NN{m[l]} --> l:NN;
	
	modify {
		delete(l);
		eval { m.rem(l); }
	}
}

rule r6(ref m:map<E,N>)
{
	n:NN{m[e]} -e:EE-> l:Node;
	
	modify {
		delete(l);
		eval { m.rem(e); }
	}
}

rule r7(ref m:map<Node,Node>, x:Node)
{
	hom(x,l);
	n:Node{m[x]} --> l:Node;
	
	modify {
		delete(l);
		eval { m.rem(l); }
	}
}

