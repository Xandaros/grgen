using execModel;

rule init : (A)
{
	modify {
		start:A --> :A --> :A --> :A --> :AB;
		return(start);
	}
}

test testInit
{
	:A --> :A --> :A --> :A --> :AB;
}

test testInitPlusReverse
{
	a0:A --> a1:A --> a2:A --> a3:A --> a4:AB;
	a0 <-:eee- a1 <-:eee- a2 <-:eee- a3 <-:eee- a4;
}

rule chainPiece(n:A) : (A)
{
	n -:Edge\eee-> succ:A;
	
	modify {
		n <-:eee- succ;
		return(succ);
	}
}

rule addReflexive(n:Node)
{
	modify {
		n --> n;
	}
}

test testReflexive
{
	n:AB --> n; 
}

test isAB(n:Node)
{
	:AB<n>;
}
