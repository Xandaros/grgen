new graph "recordreplay/recordreplay"

# initialize graph
new :NA($=n1)
new :NB($=n2)
new @("n1")-:EA($=e1)->@("n2")
new @("n2")-:EB($=e2)->@("n2")

# record the graph changes
record recordreplay/testgraph.grs start

# do graph changes
xgrs <changeAttributesPrimary && retypeNA && false> 

show num nodes only NA
show num nodes only NB
show num edges only EA
show num edges only EB

@("n1").foo
@("n1").bar
@("n1").bleeh

@("n2").bla
@("n2").huh
@("n2").lal

@("e1").foo
@("e1").bar
@("e1").bleeh

@("e2").bla
@("e2").huh
@("e2").lal

xgrs <changeAttributesPrimary && retypeNA>

show num nodes only NA
show num nodes only NB
show num edges only EA
show num edges only EB

@("n1").foo
@("n1").bar
@("n1").bleeh

@("n2").bla
@("n2").huh
@("n2").lal

@("e1").foo
@("e1").bar
@("e1").bleeh

@("e2").bla
@("e2").huh
@("e2").lal

# stop recording
record recordreplay/testgraph.grs stop

# replay the changes
import recordreplay/testgraph.grs

# check the result graph
show num nodes only NA
show num nodes only NB
show num edges only EA
show num edges only EB

@("n1").foo
@("n1").bar
@("n1").bleeh

@("n2").bla
@("n2").huh
@("n2").lal

@("e1").foo
@("e1").bar
@("e1").bleeh

@("e2").bla
@("e2").huh
@("e2").lal

# the test script tries to test all available .grs; no sense in trying to test the recorded graph
!rm recordreplay/testgraph.grs

quit
