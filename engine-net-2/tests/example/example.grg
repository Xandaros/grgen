using example;

rule fooMatchOnly(ref st:set<N>)
{
	n:N --> ch1:Node;
	n   --> ch2:Node;

	modify {
		eval {
			st.add(n);
		}
	}
}

rule foo(n:N)
{
	n --> ch1:Node;
	n --> ch2:Node;
	
	replace {
		n <-:E- ch1;
		n <-:E- ch2;
	}
}

test fits(n:N)
{
	if { n.a; }
}

rule r
{
	n:N;
	iterated {
		n --> m:Node;
		p:P(m);
		
		modify {
			p();
		}
	}
	
	modify {
	}
}

pattern P(m:Node)
{
	m --> l:Node;
	
	replace {
		m <-:E- l;
	}
}
