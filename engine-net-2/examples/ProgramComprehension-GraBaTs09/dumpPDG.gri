rule PDG_number_dependencies {
	modify {
		exec(PDG_create_first_ordered_controlDependence* &
		     PDG_add_ordered_controlDependence* &
		     [PDG_create_first_named_controlDependence] &
		     PDG_add_named_controlDependence*);
	}
}

rule PDG_create_first_ordered_controlDependence {
	n:Node;
	n -e:org_amma_pdg_ExpressionNode_controlDependenceNodes-> .;
	
	negative {
		n -:ordered_controlDependence->;
	}
	
	modify {
		-f:ordered_controlDependence<e>->;
		
		eval {
			f.index = 0;
		} 
	}
}

rule PDG_add_ordered_controlDependence {
	n:Node;
	n -e:org_amma_pdg_ExpressionNode_controlDependenceNodes-> .;
	n -f:ordered_controlDependence->;
	
	
	negative {
		if { f.index < g.index; }
		n -g:ordered_controlDependence->;
	}
	
	modify {
		-h:ordered_controlDependence<e>->;
		
		eval {
			h.index = f.index + 1;
		} 
	}
}

rule PDG_create_first_named_controlDependence {
	n:org_amma_pdg_EnterNode -e:ordered_controlDependence->;
	
	modify {
		-f:named_controlDependence<e>->;
		
		eval {
			f.name = "//@node/@controlDependenceNodes." + e.index;
		}
	}
}

rule PDG_add_named_controlDependence {
	-e:named_controlDependence-> n:Node;
	n -f:ordered_controlDependence->;
	
	modify {
		-g:named_controlDependence<f>->;
		
		eval {
			g.name = e.name + "/@controlDependenceNodes." + f.index;
		}
	}
}

rule PDG_XML_prefix {
	modify {
		emit("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<org.amma.pdg:MProgramDependenceGraph xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:org.amma.pdg=\"org.amma.pdg\">\n");
	}
}

rule PDG_dump {
	n:org_amma_pdg_EnterNode;
	
	modify {
		emit("  <node name=\"Enter\">\n");
		exec(PDG_dump_ExpressionNode_Successor(n)*);
		emit("  </node>\n");
	}
}

rule PDG_dump_ExpressionNode_Successor(n:Node) {
	succ:org_amma_pdg_ExpressionNode;
	n -e:named_controlDependence\visited_named_controlDependence-> succ;
	succ -:org_amma_pdg_ExpressionNode_expression-> expr:org_amma_pdg_Expression;
	
	negative {
		if { f.index < e.index; }
		n -f:named_controlDependence\visited_named_controlDependence->;
	}
	
	modify {
		-:visited_named_controlDependence<e>->;
		
		emit("    <controlDependenceNodes name=\"" + succ._name + "\"");
		exec(PDG_dump_DataDependencies(succ));
		emit(">\n");
		exec(PDG_dump_expression("expression", expr));
		exec(PDG_dump_ExpressionNode_Successor(succ)*);
		emit("    </controlDependenceNodes>\n");
	}
}

rule PDG_dump_DataDependencies(n:org_amma_pdg_ExpressionNode) {
	hom(n,succ);
	n -:org_amma_pdg_ExpressionNode_dataDependenceNodes-> succ:org_amma_pdg_ExpressionNode;
	
	modify {
		emit(" dataDependenceNodes=\"");
		exec([PDG_dump_DataDependence(n)]);
		emit("\"");
	}
}

rule PDG_dump_DataDependence(n:org_amma_pdg_ExpressionNode) {
	hom(n,succ);
	n -:org_amma_pdg_ExpressionNode_dataDependenceNodes-> succ:org_amma_pdg_ExpressionNode;
	-e:named_controlDependence-> succ;
	
	modify {
		emit(e.name + " ");
	}
}

rule PDG_dump_expression(var tag:string, expr:org_amma_pdg_Expression) {
	modify {
		exec(PDG_dump_binary_expression(tag, expr) ||
		     PDG_dump_unary_expression(tag, expr) ||
		     PDG_dump_leaf_expression(tag, expr) );
	}
}

rule PDG_dump_binary_expression(var tag:string, expr:org_amma_pdg_Expression) {
	expr -lhs_edge:org_amma_pdg_Expression_innerExpressions-> lhs:org_amma_pdg_Expression;
	expr -rhs_edge:org_amma_pdg_Expression_innerExpressions-> rhs:org_amma_pdg_Expression;
	
	if { lhs_edge.index < rhs_edge.index; }
	
	modify {
		emit("      <" + tag + " name=\"" + expr._name + "\">\n");
		exec(PDG_dump_expression("innerExpressions", lhs));
		exec(PDG_dump_expression("innerExpressions", rhs));
		emit("      </" + tag + ">\n");
	}
}

rule PDG_dump_unary_expression(var tag:string, expr:org_amma_pdg_Expression) {
	expr -:org_amma_pdg_Expression_innerExpressions-> op:org_amma_pdg_Expression;
	
	modify {
		emit("      <" + tag + " name=\"" + expr._name + "\">\n");
		exec(PDG_dump_expression("innerExpressions", op));
		emit("      </" + tag + ">\n");
	}
}

rule PDG_dump_leaf_expression(var tag:string, expr:org_amma_pdg_Expression) {
	modify {
		emit("      <" + tag + " name=\"" + expr._name + "\"/>\n");
	}
}

rule PDG_XML_suffix {
	modify {
		emit("</org.amma.pdg:MProgramDependenceGraph>\n");
	}
}

rule PDG_finish_dump {
	modify {
		exec([PDG_revert_named_controlDependence]);
	}
}

rule PDG_revert_named_controlDependence {
	-e:visited_named_controlDependence->;
	
	modify {
		-:org_amma_pdg_ExpressionNode_controlDependenceNodes<e>->;
	}
}
