//
// node types
//

node class Dice { rand:int; dots:int; rolls:int; }

node class Player;
node class RedPlayer    extends Player;
node class BluePlayer   extends Player;
node class YellowPlayer extends Player;
node class GreenPlayer  extends Player;

node class Field;
node class RedStartField    extends Field;
node class BlueStartField   extends Field;
node class YellowStartField extends Field;
node class GreenStartField  extends Field;

node class Figure;
node class RedFigure    extends Figure;
node class BlueFigure   extends Figure;
node class YellowFigure extends Figure;
node class GreenFigure  extends Figure;

//
// edge types
//

edge class color;

edge class red            extends  color;
edge class blue           extends  color;
edge class yellow         extends  color;
edge class green          extends  color;

edge class path;

edge class redPath        extends  path, red;
edge class bluePath       extends  path, blue;
edge class yellowPath     extends  path, yellow;
edge class greenPath      extends  path, green;

edge class notRedPath     extends           bluePath, yellowPath, greenPath;
edge class notBluePath    extends  redPath,           yellowPath, greenPath;
edge class notYellowPath  extends  redPath, bluePath,             greenPath;
edge class notGreenPath   extends  redPath, bluePath, yellowPath;

edge class anyPath        extends  redPath, bluePath, yellowPath, greenPath;

edge class holds      connect Player[0:1] --> Dice[1];
edge class occupies   connect Figure[0:1] --> Field[0:1];
edge class intends    connect Figure[0:1] --> Field[0:1];

edge class nextFigure connect Figure[1] --> Figure[1];

edge class current    connect Player[1] --> Figure[0:1];
edge class last       connect Player[1] --> Figure[0:1];

edge class start      connect Player[1] --> Field[0:1];

edge class nextPlayer connect Player[1] --> Player[1];

edge class invisible;
