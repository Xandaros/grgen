#using "TuringZustandModel.gm"

rule init {
	replace {
		m : Zustand -:kopf-> b : Band;
		eval {
			m.q = 1;
			b.bu = "#";
		}
	}
}

rule XL {
  m : Zustand -:kopf-> b : Band;
  negative {
    b <-:rechts- bx : Band;
  }

	replace {
		m -:kopf-> b <-:rechts- bn: Band;
		eval {
			bn.bu = "#";
		}
	}
}

rule XR {
  m : Zustand -:kopf-> b : Band;
  negative {
    b -:rechts-> bx : Band;
  }

	replace {
		m -:kopf-> b -:rechts-> bn: Band;
		eval {
			bn.bu = "#";
		}
	}
}

rule R1 {
  m : Zustand -:kopf-> b:Band;
  bl:Band -r:rechts-> b;
  if { m.q == 1 &&  b.bu == "1"; }

	replace {
		m -:kopf-> bl;
		bl -r-> b;
		eval {
			m.q = 3;
			b.bu = "1";
			r.moves = r.moves + 1;
		}
	}
}

rule R2 {
  m : Zustand -:kopf-> b:Band;
  b -r:rechts-> br:Band;
  if { m.q == 1 &&  b.bu == "#"; }

	replace {
		m -:kopf-> br;
		b -r-> br;
		eval {
			m.q = 2;
			b.bu = "1";
			r.moves = r.moves + 1;
		}
	}
}

rule R3 {
  m : Zustand -:kopf-> b:Band;
  b -r:rechts-> br:Band;
  if { m.q == 2 &&  b.bu == "1"; }

	replace {
		m -:kopf-> br;
		b -r-> br;
		eval {
			m.q = 2;
			b.bu = "1";
			r.moves = r.moves + 1;
		}
	}
}

rule R4 {
  m : Zustand -:kopf-> b:Band;
  bl:Band -:rechts-> b;
  if { m.q == 2 &&  b.bu == "#"; }

	replace {
		m -:kopf-> bl;
		bl -:rechts-> b;
		eval {
			m.q = 1;
			b.bu = "1";
		}
	}
}

rule R5 {
  m : Zustand -:kopf-> b:Band;
  b -:rechts-> br:Band;
  if { m.q == 3 &&  b.bu == "1"; }

	replace {
		m -:kopf-> br;
		b -:rechts-> br;
		eval {
			m.q = 42;
			b.bu = "1";
		}
	}
}

rule R6 {
  m : Zustand -:kopf-> b:Band;
  bl:Band -:rechts-> b;
  if { m.q == 3 &&  b.bu == "#"; }

	replace {
		m -:kopf-> bl;
		bl -:rechts-> b;
		eval {
			m.q = 2;
			b.bu = "1";
		}
	}
}
