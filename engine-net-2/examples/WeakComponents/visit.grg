using visit;

#include "graphgen.gri"

// HACK: The visitor ID should be passed to the rule and to the subpattern,
//       but as subpatterns don't support value variables yet and the first
//       allocated visited flag is always 0, we use the constant value 0
//       inside the rule and the subpattern...


// If you want to use this pattern for multigraphs, you also have to match
// all edges between n and m using another pattern.
pattern Component(n:Node)
{
    alternative {
        more {
            n ?--? m:Node;
            c1:Component(n);
            c2:Component(m);

            modify {
                c1();
                c2();
            }
        }
        end {
            negative { n ?--? m:Node; }

            modify {
                eval {
                    n.visited[0] = true;
                }
            }
        }
    }
    modify {}
}

rule findComponent()
{
    n:N;
    if { !n.visited[0]; }

    comp:Component(n);

    modify {
        comp();
    }
}
