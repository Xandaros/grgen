# This is the GrGen.NET solution to the Model Migration case of Transformation Tool Contest 2010.

import original_minimal_metamodel.ecore evolved_metamodel.ecore original_model.xmi core.grg

debug set layout Compilergraph
debug set layout option CREATE_LOOP_TREE false

# Nesting
dump add node minuml1_ActivityGraph group by hidden outgoing minuml1_ActivityGraph_partition
dump add node minuml1_ActivityGraph group by hidden outgoing minuml1_StateMachine_transitions
dump add node minuml1_Partition group by hidden outgoing minuml1_Partition_contents

# Hiding
dump add node minuml1_CompositeState exclude

dump add edge minuml1_Transition_source exclude
dump add edge minuml1_Transition_target exclude

dump add edge minuml1_CompositeState_subvertex exclude
dump add edge minuml1_StateMachine_top exclude

# Appearance
dump set node minuml1_ActionState shape ellipse
dump set node minuml1_ActionState labels off
dump add node minuml1_ActionState shortinfotag _name

dump set node minuml1_FinalState shape circle
dump set node minuml1_FinalState color red
dump set node minuml1_FinalState labels off

dump set node minuml1_ObjectFlowState shape lparallelogram
dump set node minuml1_ObjectFlowState labels off
dump add node minuml1_ObjectFlowState shortinfotag _name

dump set edge dump_transition labels off
dump add edge dump_transition shortinfotag name

dump set node minuml1_ActivityGraph labels off
dump set node minuml1_ActivityGraph color white

dump set node minuml1_Partition labels off
dump add node minuml1_Partition shortinfotag _name

# beautify and dump the graph
exec dump_addTransitionsToPartitions*
exec dump_guardedTransitionEdges*
exec dump_transitionEdges*

show graph ycomp
